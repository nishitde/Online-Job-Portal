//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyJobPortalModel {
    using System;
    using System.Data;
    using System.Data.SqlClient;
    using System.Configuration;
    
    
    public class Question {
        
        private Int32 _Id;
        
        private DateTime _Date;
        
        private String _QuestionName;
        
        private String _RelatedTo;
        
        private Int32 _CompanyId;
        
        public Question(int ID) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand("select * from Question where ID = " + ID , ObjConnection);
			SqlDataReader ObjReader = ObjCommand.ExecuteReader();
			ObjReader.Read();
			if(ObjReader["Id"] != DBNull.Value)
				Id = (int)ObjReader["Id"];
			if(ObjReader["Date"] != DBNull.Value)
				Date = (DateTime)ObjReader["Date"];
			if(ObjReader["QuestionName"] != DBNull.Value)
				QuestionName = (string)ObjReader["QuestionName"];
			if(ObjReader["RelatedTo"] != DBNull.Value)
				RelatedTo = (string)ObjReader["RelatedTo"];
			if(ObjReader["CompanyId"] != DBNull.Value)
				CompanyId = (int)ObjReader["CompanyId"];
			ObjReader.Close();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
        }
        
        public virtual Int32 Id {
            get {
				return _Id;
            }
            set {
				_Id = value;
            }
        }
        
        public virtual DateTime Date {
            get {
				return _Date;
            }
            set {
				_Date = value;
            }
        }
        
        public virtual String QuestionName {
            get {
				return _QuestionName;
            }
            set {
				_QuestionName = value;
            }
        }
        
        public virtual String RelatedTo {
            get {
				return _RelatedTo;
            }
            set {
				_RelatedTo = value;
            }
        }
        
        public virtual Int32 CompanyId {
            get {
				return _CompanyId;
            }
            set {
				_CompanyId = value;
            }
        }
        
        public static Int32 AddQuestion(DateTime Date, String QuestionName, String RelatedTo, Int32 CompanyId) {
			string strsql = "insert into Question output inserted.id values(" + "'"+ Date + "'," + "'"+ QuestionName.Replace("'","''") + "'," + "'"+ RelatedTo.Replace("'","''") + "'," + CompanyId + ")"; 
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			int NewID = (int) ObjCommand.ExecuteScalar();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
			return NewID;
        }
        
        public static DataTable GetQuestionRecords(string WhereClause) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			DataTable ObjDataTable= new DataTable();
			string strsql ="select * from Question";
			if(WhereClause != String.Empty) strsql= strsql + " where " + WhereClause;
			SqlDataAdapter ObjAdapter = new SqlDataAdapter(strsql,ObjConnection);
			ObjAdapter.Fill(ObjDataTable);
			ObjAdapter.Dispose();
			ObjConnection.Dispose();
			return ObjDataTable;
        }
        
        public void Update() {
			string strsql= "update Question set " + "Date= '" + Date.ToString("MM/dd/yyyy hh:mm:ss tt") + "', " + "QuestionName= '" + QuestionName.Replace("'","''") + "', " + "RelatedTo= '" + RelatedTo.Replace("'","''") + "', " + "CompanyId= " + CompanyId + " " + " where ID ="  + Id ;
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			ObjCommand.ExecuteNonQuery();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
        }
        
        public static void DeleteQuestionRecords(string WhereClause) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			DataTable ObjDataTable= new DataTable();
			string strsql ="delete from Question";
			if(WhereClause != String.Empty) strsql= strsql + " where " + WhereClause;
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			ObjCommand.ExecuteNonQuery();
			ObjCommand.Dispose();
			ObjConnection.Dispose();
        }
    }
}
