//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyJobPortalModel {
    using System;
    using System.Data;
    using System.Data.SqlClient;
    using System.Configuration;
    
    
    public class Recruiter {
        
        private Int32 _Id;
        
        private Int32 _CompanyId;
        
        private Int32 _TitleId;
        
        private String _FirstName;
        
        private String _LastName;
        
        private String _EmailId;
        
        private String _Status;
        
        public Recruiter(int ID) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand("select * from Recruiter where ID = " + ID , ObjConnection);
			SqlDataReader ObjReader = ObjCommand.ExecuteReader();
			ObjReader.Read();
			if(ObjReader["Id"] != DBNull.Value)
				Id = (int)ObjReader["Id"];
			if(ObjReader["CompanyId"] != DBNull.Value)
				CompanyId = (int)ObjReader["CompanyId"];
			if(ObjReader["TitleId"] != DBNull.Value)
				TitleId = (int)ObjReader["TitleId"];
			if(ObjReader["FirstName"] != DBNull.Value)
				FirstName = (string)ObjReader["FirstName"];
			if(ObjReader["LastName"] != DBNull.Value)
				LastName = (string)ObjReader["LastName"];
			if(ObjReader["EmailId"] != DBNull.Value)
				EmailId = (string)ObjReader["EmailId"];
			if(ObjReader["Status"] != DBNull.Value)
				Status = (string)ObjReader["Status"];
			ObjReader.Close();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
        }
        
        public virtual Int32 Id {
            get {
				return _Id;
            }
            set {
				_Id = value;
            }
        }
        
        public virtual Int32 CompanyId {
            get {
				return _CompanyId;
            }
            set {
				_CompanyId = value;
            }
        }
        
        public virtual Int32 TitleId {
            get {
				return _TitleId;
            }
            set {
				_TitleId = value;
            }
        }
        
        public virtual String FirstName {
            get {
				return _FirstName;
            }
            set {
				_FirstName = value;
            }
        }
        
        public virtual String LastName {
            get {
				return _LastName;
            }
            set {
				_LastName = value;
            }
        }
        
        public virtual String EmailId {
            get {
				return _EmailId;
            }
            set {
				_EmailId = value;
            }
        }
        
        public virtual String Status {
            get {
				return _Status;
            }
            set {
				_Status = value;
            }
        }
        
        public static Int32 AddRecruiter(Int32 CompanyId, Int32 TitleId, String FirstName, String LastName, String EmailId, String Status) {
			string strsql = "insert into Recruiter output inserted.id values(" + CompanyId + "," + TitleId + "," + "'"+ FirstName.Replace("'","''") + "'," + "'"+ LastName.Replace("'","''") + "'," + "'"+ EmailId.Replace("'","''") + "'," + "'"+ Status.Replace("'","''") + "'" + ")"; 
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			int NewID = (int) ObjCommand.ExecuteScalar();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
			return NewID;
        }
        
        public static DataTable GetRecruiterRecords(string WhereClause) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			DataTable ObjDataTable= new DataTable();
			string strsql ="select * from Recruiter";
			if(WhereClause != String.Empty) strsql= strsql + " where " + WhereClause;
			SqlDataAdapter ObjAdapter = new SqlDataAdapter(strsql,ObjConnection);
			ObjAdapter.Fill(ObjDataTable);
			ObjAdapter.Dispose();
			ObjConnection.Dispose();
			return ObjDataTable;
        }
        
        public void Update() {
			string strsql= "update Recruiter set " + "CompanyId= " + CompanyId + ", " + "TitleId= " + TitleId + ", " + "FirstName= '" + FirstName.Replace("'","''") + "', " + "LastName= '" + LastName.Replace("'","''") + "', " + "EmailId= '" + EmailId.Replace("'","''") + "', " + "Status= '" + Status.Replace("'","''") + "' " + " where ID ="  + Id ;
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			ObjCommand.ExecuteNonQuery();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
        }
        
        public static void DeleteRecruiterRecords(string WhereClause) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			DataTable ObjDataTable= new DataTable();
			string strsql ="delete from Recruiter";
			if(WhereClause != String.Empty) strsql= strsql + " where " + WhereClause;
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			ObjCommand.ExecuteNonQuery();
			ObjCommand.Dispose();
			ObjConnection.Dispose();
        }
    }
}
