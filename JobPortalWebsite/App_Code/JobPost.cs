//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyJobPortalModel {
    using System;
    using System.Data;
    using System.Data.SqlClient;
    using System.Configuration;
    
    
    public class JobPost {
        
        private Int32 _Id;
        
        private Int32 _RecruiterId;
        
        private String _JobTitle;
        
        private Int32 _CompanyId;
        
        private Int32 _DepartmentId;
        
        private Int32 _DesignationId;
        
        private String _JobType;
        
        private String _ApplicableToSex;
        
        private Decimal _MinSalary;
        
        private Decimal _MaxSalary;
        
        private String _JobDescription;
        
        private String _Status;
        
        public JobPost(int ID) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand("select * from JobPost where ID = " + ID , ObjConnection);
			SqlDataReader ObjReader = ObjCommand.ExecuteReader();
			ObjReader.Read();
			if(ObjReader["Id"] != DBNull.Value)
				Id = (int)ObjReader["Id"];
			if(ObjReader["RecruiterId"] != DBNull.Value)
				RecruiterId = (int)ObjReader["RecruiterId"];
			if(ObjReader["JobTitle"] != DBNull.Value)
				JobTitle = (string)ObjReader["JobTitle"];
			if(ObjReader["CompanyId"] != DBNull.Value)
				CompanyId = (int)ObjReader["CompanyId"];
			if(ObjReader["DepartmentId"] != DBNull.Value)
				DepartmentId = (int)ObjReader["DepartmentId"];
			if(ObjReader["DesignationId"] != DBNull.Value)
				DesignationId = (int)ObjReader["DesignationId"];
			if(ObjReader["JobType"] != DBNull.Value)
				JobType = (string)ObjReader["JobType"];
			if(ObjReader["ApplicableToSex"] != DBNull.Value)
				ApplicableToSex = (string)ObjReader["ApplicableToSex"];
			if(ObjReader["MinSalary"] != DBNull.Value)
				MinSalary = (decimal)ObjReader["MinSalary"];
			if(ObjReader["MaxSalary"] != DBNull.Value)
				MaxSalary = (decimal)ObjReader["MaxSalary"];
			if(ObjReader["JobDescription"] != DBNull.Value)
				JobDescription = (string)ObjReader["JobDescription"];
			if(ObjReader["Status"] != DBNull.Value)
				Status = (string)ObjReader["Status"];
			ObjReader.Close();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
        }
        
        public virtual Int32 Id {
            get {
				return _Id;
            }
            set {
				_Id = value;
            }
        }
        
        public virtual Int32 RecruiterId {
            get {
				return _RecruiterId;
            }
            set {
				_RecruiterId = value;
            }
        }
        
        public virtual String JobTitle {
            get {
				return _JobTitle;
            }
            set {
				_JobTitle = value;
            }
        }
        
        public virtual Int32 CompanyId {
            get {
				return _CompanyId;
            }
            set {
				_CompanyId = value;
            }
        }
        
        public virtual Int32 DepartmentId {
            get {
				return _DepartmentId;
            }
            set {
				_DepartmentId = value;
            }
        }
        
        public virtual Int32 DesignationId {
            get {
				return _DesignationId;
            }
            set {
				_DesignationId = value;
            }
        }
        
        public virtual String JobType {
            get {
				return _JobType;
            }
            set {
				_JobType = value;
            }
        }
        
        public virtual String ApplicableToSex {
            get {
				return _ApplicableToSex;
            }
            set {
				_ApplicableToSex = value;
            }
        }
        
        public virtual Decimal MinSalary {
            get {
				return _MinSalary;
            }
            set {
				_MinSalary = value;
            }
        }
        
        public virtual Decimal MaxSalary {
            get {
				return _MaxSalary;
            }
            set {
				_MaxSalary = value;
            }
        }
        
        public virtual String JobDescription {
            get {
				return _JobDescription;
            }
            set {
				_JobDescription = value;
            }
        }
        
        public virtual String Status {
            get {
				return _Status;
            }
            set {
				_Status = value;
            }
        }
        
        public static Int32 AddJobPost(Int32 RecruiterId, String JobTitle, Int32 CompanyId, Int32 DepartmentId, Int32 DesignationId, String JobType, String ApplicableToSex, Decimal MinSalary, Decimal MaxSalary, String JobDescription, String Status) {
			string strsql = "insert into JobPost output inserted.id values(" + RecruiterId + "," + "'"+ JobTitle.Replace("'","''") + "'," + CompanyId + "," + DepartmentId + "," + DesignationId + "," + "'"+ JobType.Replace("'","''") + "'," + "'"+ ApplicableToSex.Replace("'","''") + "'," + MinSalary + "," + MaxSalary + "," + "'"+ JobDescription.Replace("'","''") + "'," + "'"+ Status.Replace("'","''") + "'" + ")"; 
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			int NewID = (int) ObjCommand.ExecuteScalar();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
			return NewID;
        }
        
        public static DataTable GetJobPostRecords(string WhereClause) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			DataTable ObjDataTable= new DataTable();
			string strsql ="select * from JobPost";
			if(WhereClause != String.Empty) strsql= strsql + " where " + WhereClause;
			SqlDataAdapter ObjAdapter = new SqlDataAdapter(strsql,ObjConnection);
			ObjAdapter.Fill(ObjDataTable);
			ObjAdapter.Dispose();
			ObjConnection.Dispose();
			return ObjDataTable;
        }
        
        public void Update() {
			string strsql= "update JobPost set " + "RecruiterId= " + RecruiterId + ", " + "JobTitle= '" + JobTitle.Replace("'","''") + "', " + "CompanyId= " + CompanyId + ", " + "DepartmentId= " + DepartmentId + ", " + "DesignationId= " + DesignationId + ", " + "JobType= '" + JobType.Replace("'","''") + "', " + "ApplicableToSex= '" + ApplicableToSex.Replace("'","''") + "', " + "MinSalary= " + MinSalary + ", " + "MaxSalary= " + MaxSalary + ", " + "JobDescription= '" + JobDescription.Replace("'","''") + "', " + "Status= '" + Status.Replace("'","''") + "' " + " where ID ="  + Id ;
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			ObjCommand.ExecuteNonQuery();
			ObjConnection.Dispose();
			ObjCommand.Dispose();
        }
        
        public static void DeleteJobPostRecords(string WhereClause) {
			SqlConnection ObjConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MyJobPortal"].ConnectionString);
			ObjConnection.Open();
			DataTable ObjDataTable= new DataTable();
			string strsql ="delete from JobPost";
			if(WhereClause != String.Empty) strsql= strsql + " where " + WhereClause;
			SqlCommand ObjCommand = new SqlCommand(strsql,ObjConnection);
			ObjCommand.ExecuteNonQuery();
			ObjCommand.Dispose();
			ObjConnection.Dispose();
        }
    }
}
